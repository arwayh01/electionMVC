// <auto-generated />
using System;
using ELECTION.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ELECTION.Migrations
{
    [DbContext(typeof(ELECTIONDBContext))]
    [Migration("20211129221513_addVote")]
    partial class addVote
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ELECTION.Models.Administrateur", b =>
                {
                    b.Property<int>("AdministrateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CinAdmin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cin_admin");

                    b.Property<string>("MotDePasse")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mot_de_passe");

                    b.Property<string>("NomAdmin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nom_admin");

                    b.Property<string>("PrenomAdmin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prenom_admin");

                    b.HasKey("AdministrateurId");

                    b.ToTable("Administrateurs");
                });

            modelBuilder.Entity("ELECTION.Models.Candidat", b =>
                {
                    b.Property<int>("CandidatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("candidatId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdministrateurId")
                        .HasColumnType("int");

                    b.Property<string>("CinCandidat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cin_candidat");

                    b.Property<string>("ImageCandidat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image_candidat");

                    b.Property<string>("NomCandidat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nom_candidat");

                    b.Property<string>("PrenomCandidat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prenom_candidat");

                    b.HasKey("CandidatId");

                    b.HasIndex(new[] { "AdministrateurId" }, "IX_Candidats_AdministrateurId");

                    b.ToTable("Candidats");
                });

            modelBuilder.Entity("ELECTION.Models.CentreElection", b =>
                {
                    b.Property<int>("CentreElectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("centreElectionId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdministrateurId")
                        .HasColumnType("int");

                    b.Property<string>("AdresseCentre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adresse_centre");

                    b.Property<string>("LibelleCentre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("libelle_centre");

                    b.HasKey("CentreElectionId");

                    b.HasIndex(new[] { "AdministrateurId" }, "IX_CentreElections_AdministrateurId")
                        .IsUnique();

                    b.ToTable("CentreElections");
                });

            modelBuilder.Entity("ELECTION.Models.Electeur", b =>
                {
                    b.Property<int>("ElecteurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("electeurId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CentreElectionId")
                        .HasColumnType("int")
                        .HasColumnName("centreElectionId");

                    b.Property<string>("CinElecteur")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cin_electeur");

                    b.Property<int?>("CondidatcandidatId")
                        .HasColumnType("int");

                    b.Property<string>("GenreElecteur")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("genre_electeur");

                    b.Property<string>("NomElecteur")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nom_electeur");

                    b.Property<string>("PrenomElecteur")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prenom_electeur");

                    b.HasKey("ElecteurId");

                    b.HasIndex(new[] { "CondidatcandidatId" }, "IX_Electeurs_CondidatcandidatId");

                    b.HasIndex(new[] { "CentreElectionId" }, "IX_Electeurs_centreElectionId");

                    b.ToTable("Electeurs");
                });

            modelBuilder.Entity("ELECTION.Models.Vote", b =>
                {
                    b.Property<int>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ElecteurId")
                        .HasColumnType("int");

                    b.HasKey("VoteId");

                    b.HasIndex(new[] { "ElecteurId" }, "IX_Electeur_ElecteurId")
                        .IsUnique();

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("ELECTION.Models.Candidat", b =>
                {
                    b.HasOne("ELECTION.Models.Administrateur", "Administrateur")
                        .WithMany("Candidats")
                        .HasForeignKey("AdministrateurId");

                    b.Navigation("Administrateur");
                });

            modelBuilder.Entity("ELECTION.Models.CentreElection", b =>
                {
                    b.HasOne("ELECTION.Models.Administrateur", "Administrateur")
                        .WithOne("CentreElection")
                        .HasForeignKey("ELECTION.Models.CentreElection", "AdministrateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrateur");
                });

            modelBuilder.Entity("ELECTION.Models.Electeur", b =>
                {
                    b.HasOne("ELECTION.Models.CentreElection", "CentreElection")
                        .WithMany("Electeurs")
                        .HasForeignKey("CentreElectionId");

                    b.HasOne("ELECTION.Models.Candidat", "Condidatcandidat")
                        .WithMany("Electeurs")
                        .HasForeignKey("CondidatcandidatId");

                    b.Navigation("CentreElection");

                    b.Navigation("Condidatcandidat");
                });

            modelBuilder.Entity("ELECTION.Models.Vote", b =>
                {
                    b.HasOne("ELECTION.Models.Electeur", "Electeur")
                        .WithOne("Vote")
                        .HasForeignKey("ELECTION.Models.Vote", "ElecteurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Electeur");
                });

            modelBuilder.Entity("ELECTION.Models.Administrateur", b =>
                {
                    b.Navigation("Candidats");

                    b.Navigation("CentreElection");
                });

            modelBuilder.Entity("ELECTION.Models.Candidat", b =>
                {
                    b.Navigation("Electeurs");
                });

            modelBuilder.Entity("ELECTION.Models.CentreElection", b =>
                {
                    b.Navigation("Electeurs");
                });

            modelBuilder.Entity("ELECTION.Models.Electeur", b =>
                {
                    b.Navigation("Vote");
                });
#pragma warning restore 612, 618
        }
    }
}
